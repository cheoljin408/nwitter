{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","className","type","placeholder","required","autoComplete","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","autoFocus","src","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createAt","Date","now","creatorId","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","orderBy","onSnapshot","snapshot","nweetArray","docs","map","marginTop","Profile","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","updateProfile","signOut","push","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","App","init","setInit","currentUser","setIsLoggedIn","setUserObj","onAuthStateChanged","user","args","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d9617b72.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport 'firebase/auth';\nimport 'firebase/firestore';\nimport 'firebase/storage';\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n    appId: process.env.REACT_APP_APP_ID\n  };\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();","import React, {useState} from 'react';\nimport { authService } from '../fbase';\n\nconst AuthForm = () => {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [newAccount, setNewAccount] = useState(true);\n    const [error, setError] = useState('');\n    const onChange = (event) => {\n        const {\n            target: {name, value},\n        } = event;\n\n        if(name === 'email') {\n            setEmail(value);\n        }\n        else if(name === 'password') {\n            setPassword(value);\n        }\n    };\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        try {\n            let data;\n            if(newAccount) {\n                // new account\n                data = await authService.createUserWithEmailAndPassword(email, password);\n            }\n            else {\n                // log in\n                data = await authService.signInWithEmailAndPassword(email, password);\n            }\n            console.log(data);\n        }\n        catch(error) {\n            setError(error.message)\n        }\n    };\n    const toggleAccount = () => setNewAccount(prev => !prev);\n    return (\n        <>\n            <form onSubmit={onSubmit} className=\"container\">\n                <input name='email' type='email' placeholder='Email' required value={email} onChange={onChange} autoComplete='off' className=\"authInput\" />\n                <input name='password' type='password' placeholder='Password' required value={password} onChange={onChange} autoComplete='off' className=\"authInput\" />\n                <input type='submit' value={newAccount ? 'Create Account' : 'Sign In'} className=\"authInput authSubmit\" />\n                {error && <span className=\"authError\">{error}</span>}\n            </form>\n            <span onClick={toggleAccount} className=\"authSwitch\">{newAccount ? 'Sign In' : 'Create Account'}</span>\n        </>\n    );\n}\n\nexport default AuthForm;","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faTwitter,\n  faGoogle,\n  faGithub,\n} from \"@fortawesome/free-brands-svg-icons\";\nimport { authService, firebaseInstance } from '../fbase';\nimport AuthForm from '../components/AuthForm';\n\nconst Auth = () => {\n    const onSocialClick = async (event) => {\n        const {\n            target: {name},\n        } = event;\n        let provider;\n\n        if(name === 'google'){\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\n        }\n        else if(name === 'github') {\n            provider = new firebaseInstance.auth.GithubAuthProvider();\n        }\n        const data = await authService.signInWithPopup(provider);\n        console.log(data);\n    }\n\n    return (\n        <div className=\"authContainer\">\n            <FontAwesomeIcon\n                icon={faTwitter}\n                color={\"#04AAFF\"}\n                size=\"3x\"\n                style={{ marginBottom: 30 }}\n            />\n            <AuthForm />\n            <div className=\"authBtns\">\n                <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\n                    Continue with Google <FontAwesomeIcon icon={faGoogle} />\n                </button>\n                <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\n                    Continue with Github <FontAwesomeIcon icon={faGithub} />\n                </button>\n            </div>\n        </div>\n    );\n}\nexport default Auth;","import React, { useState } from 'react';\nimport { dbService, storageService } from '../fbase';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Nweet = ({ nweetObj, isOwner }) => {\n    const [editing, setEditing] = useState(false);\n    const [newNweet, setNewNweet] = useState(nweetObj.text);\n    const onDeleteClick = async () => {\n        const ok = window.confirm(\"Are you sure you want to delete this nweet?\");\n\n        if(ok) {\n            await dbService.doc(`nweets/${nweetObj.id}`).delete();\n            await storageService.refFromURL(nweetObj.attachmentUrl).delete();\n        }\n    };\n\n    const toggleEditing = () => {\n        setEditing((prev) => !prev);\n    };\n\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        console.log(nweetObj, newNweet);\n        await dbService.doc(`nweets/${nweetObj.id}`).update({\n            text: newNweet,\n        });\n        setEditing(false);\n    };\n\n    const onChange = (event) => {\n        const {\n            target: {value},\n        } = event;\n        setNewNweet(value);\n    };\n    return (\n        <div className=\"nweet\">\n            {editing ? (\n                <>\n                    {isOwner && (\n                        <>\n                            <form onSubmit={onSubmit} className=\"container nweetEdit\">\n                                <input type=\"text\" placeholder=\"Edit your nweet\" value={newNweet} onChange={onChange} required autoFocus className=\"formInput\" />\n                                <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\n                            </form>\n                            <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\n                                Cancel\n                            </span>\n                        </>\n                    )}\n                </>\n            ) : (\n                <>\n                    <h4>{nweetObj.text}</h4>\n                    {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl} />}\n                    {isOwner && (\n                        <div className=\"nweet__actions\">\n                            <span onClick={onDeleteClick}>\n                                <FontAwesomeIcon icon={faTrash} />\n                            </span>\n                            <span onClick={toggleEditing}>\n                                <FontAwesomeIcon icon={faPencilAlt} />\n                            </span>\n                        </div>\n                    )}\n                </>\n            )}\n        </div>\n    );\n};\n\nexport default Nweet; ","import React, {useState} from 'react';\nimport {v4 as uuidv4} from 'uuid';\nimport {storageService, dbService} from '../fbase';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nconst NweetFactory = ({userObj}) => {\n    const [nweet, setNweet] = useState('');\n    const [attachment, setAttachment] = useState(\"\");\n    const onSubmit = async (event) => {\n        if (nweet === \"\") {\n            return;\n        }\n        event.preventDefault();\n        let attachmentUrl = \"\";\n        if(attachment !== \"\") {\n            const attachmentRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\n            const response = await attachmentRef.putString(attachment, \"data_url\");\n            attachmentUrl = await response.ref.getDownloadURL();\n        }\n        const nweetObj = {\n            text: nweet,\n            createAt: Date.now(),\n            creatorId: userObj.uid,\n            attachmentUrl\n        };\n        await dbService.collection(\"nweets\").add(nweetObj);\n        setNweet(\"\");\n        setAttachment(\"\");\n    };\n    const onChange = (event) => {\n        const {target: {value}} = event;\n        setNweet(value);\n    };\n    const onFileChange = (event) => {\n        const {target: {files}} = event;\n        const theFile = files[0];\n        const reader = new FileReader();\n        reader.onloadend = (finishEvent) => {\n            const {\n                currentTarget: {result}\n            } = finishEvent;\n            console.log(finishEvent);\n            setAttachment(result);\n        }\n        reader.readAsDataURL(theFile);\n    };\n    const onClearAttachment = () => setAttachment(\"\");\n    return (\n        <form onSubmit={onSubmit} className=\"factoryForm\">\n            <div className=\"factoryInput__container\">\n                <input\n                    className=\"factoryInput__input\"\n                    value={nweet}\n                    onChange={onChange}\n                    type=\"text\"\n                    placeholder=\"What's on your mind?\"\n                    maxLength={120}\n                />\n                <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\n            </div>\n            <label for=\"attach-file\" className=\"factoryInput__label\">\n                <span>Add photos</span>\n                <FontAwesomeIcon icon={faPlus} />\n            </label>\n            <input\n                id=\"attach-file\"\n                type=\"file\"\n                accept=\"image/*\"\n                onChange={onFileChange}\n                style={{\n                    opacity: 0,\n                }}\n            />\n            {attachment && (\n                <div className=\"factoryForm__attachment\">\n                    <img\n                    src={attachment}\n                    style={{\n                        backgroundImage: attachment,\n                    }}\n                    />\n                    <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\n                        <span>Remove</span>\n                        <FontAwesomeIcon icon={faTimes} />\n                    </div>\n                </div>\n            )}\n            </form>\n    );\n}\n\nexport default NweetFactory;","import React, { useEffect, useState } from 'react';\nimport Nweet from '../components/Nweet';\nimport { dbService } from '../fbase';\nimport NweetFactory from '../components/NweetFactory';\n\nconst Home = ({ userObj }) => {\n    const [nweets, setNweets] = useState([]);\n    \n    // const getNeets = async () => {\n    //     const dbNweets = await dbService.collection('nweets').get();\n    //     dbNweets.forEach((document) => {\n    //         const nweetObject = {\n    //             ...document.data(),\n    //             id: document.id,\n    //         };\n    //         setNweets((prev) => [nweetObject, ...prev]);\n    //     });\n    // }\n    useEffect(() => {\n        // getNeets();\n        dbService.collection('nweets').orderBy('createAt', 'desc').onSnapshot(snapshot => {\n            const nweetArray = snapshot.docs.map((doc) => ({\n                id: doc.id,\n                ...doc.data(),\n            }));\n            setNweets(nweetArray);\n        });\n    }, []);\n    \n    return (\n        <div className=\"contianer\">\n            <NweetFactory userObj={userObj} />\n            <div style={{ marginTop: 30 }}>\n                {nweets.map(nweet => (\n                    <Nweet key={nweet.id} nweetObj={nweet} isOwner={nweet.creatorId === userObj.uid} />\n                ))}\n            </div>\n        </div>\n    );\n}\nexport default Home;","import React, { useState } from 'react';\nimport { useHistory } from 'react-router';\nimport { authService } from '../fbase';\n\nconst Profile = ({ refreshUser, userObj }) => {\n    const history = useHistory();\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n    const onLogOutClick = () => {\n        authService.signOut();\n        history.push('/');\n    };\n    const onChange = (event) => {\n        const {\n            target: {value},\n        } = event;\n        setNewDisplayName(value);\n    };\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        if(userObj.displayName !== newDisplayName) {\n            const response = await userObj.updateProfile({\n                displayName: newDisplayName,\n            });\n            refreshUser();\n        }\n    };\n    return (\n        <div className=\"container\">\n            <form onSubmit={onSubmit} className=\"profileForm\">\n                <input onChange={onChange} type=\"text\" placeholder=\"Display name\" value={newDisplayName} autoFocus className=\"formInput\" />\n                <input\n                    type=\"submit\"\n                    value=\"Update Profile\"\n                    className=\"formBtn\"\n                    style={{\n                        marginTop: 10,\n                    }}\n                />\n            </form>\n            <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\n                Log Out\n            </span>\n        </div>\n    );\n};\n\nexport default Profile;","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Navigation = ({ userObj }) => (\n    <nav>\n        <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\n            <li>\n                <Link to=\"/\" style={{ marginRight: 10 }}>\n                    <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\n                </Link>\n            </li>\n            <li>\n                <Link to=\"/profile\" style={{ marginLeft: 10, display: \"flex\", flexDirection: \"column\", alignItems: \"center\", fontSize: 12, }} >\n                    <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\n                    <span style={{ marginTop: 10 }}>\n                        {userObj.displayName ? `${userObj.displayName}의 Profile` : \"Profile\"}\n                    </span>\n                </Link>\n            </li>\n        </ul>\n    </nav>\n);\n\nexport default Navigation;","import React from 'react';\nimport { HashRouter as Router, Route, Switch} from 'react-router-dom';\nimport Auth from '../routes/Auth';\nimport Home from '../routes/Home';\nimport Profile from '../routes/Profile';\nimport Navigation from './Navigation';\n\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\n    return (\n    <Router>\n        {isLoggedIn && <Navigation userObj={userObj} />}\n        <Switch>\n            {isLoggedIn ? (\n                <div\n                    style={{\n                        maxWidth: 890,\n                        width: \"100%\",\n                        margin: \"0 auto\",\n                        marginTop: 80,\n                        display: \"flex\",\n                        justifyContent: \"center\",\n                    }}\n                >\n                    <Route exact path='/'>\n                        <Home userObj={userObj} />\n                    </Route>\n                    <Route exact path='/profile'>\n                        <Profile userObj={userObj} refreshUser={refreshUser} />\n                    </Route>\n                </div>\n             ) : (\n                <Route exact path='/'>\n                    <Auth />\n                </Route>\n             )}\n        </Switch>\n    </Router>);\n};\n\nexport default AppRouter;","import React, { useEffect, useState } from 'react';\nimport AppRouter from './Router';\nimport { authService } from '../fbase';\n\nfunction App() {\n  const [init, setInit] = useState(false)\n  const [isLoggedIn, setIsLoggedIn] = useState(authService.currentUser);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if(user) {\n        setIsLoggedIn(true);\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      }\n      else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n  return (\n    <>\n      {init ? <AppRouter isLoggedIn={isLoggedIn} userObj={userObj} refreshUser={refreshUser} /> : 'Initializing...'}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}